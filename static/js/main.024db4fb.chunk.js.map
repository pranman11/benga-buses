{"version":3,"sources":["AnecdoteModal.js","StopsModal.js","menu/SidebarData.js","menu/SideNavbar.js","pages/Music.js","pages/About.js","Mapload.js","App.js","reportWebVitals.js","index.js"],"names":["AnecdoteModal","className","src","Group5","title","line6","props","StopsModal","Group8","group8Data","overlapGroup","line7","busStop11228","line8","busStop21229","line9","busStop312210","line10","SidebarData","path","icon","cName","SideNavbar","sidebar","setSidebar","useState","showSidebar","Provider","value","color","to","onClick","map","item","index","Music","About","mapboxgl","accessToken","Mapload","mapContainerRef","useRef","lng","setLng","lat","setLat","zoom","setZoom","displayMenu","setDisplayMenu","useEffect","Map","container","current","style","center","addControl","NavigationControl","on","getCenter","toFixed","getZoom","point","addSource","addLayer","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","console","log","features","properties","busNo","busStopName","description","coordinates","geometry","slice","Math","abs","lngLat","setLngLat","setHTML","addTo","document","getElementById","addEventListener","remove","this","busRouteUrl","component","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.024db4fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AnecdoteModal.css';\r\n \r\nfunction AnecdoteModal() {\r\n  return (\r\n    <div className=\"group-4\">\r\n      {/* <div className=\"overlap-group rectangleAnecdote\"> */}\r\n        <img\r\n          className=\"img-20210213-wa0006-1\"\r\n          src=\"img-20210213-wa0006-1.png\"\r\n        />\r\n        <Group5\r\n          title=\"ANECDOTE\"\r\n          line6=\"line-6.png\"\r\n        />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AnecdoteModal;\r\n \r\nfunction Group5(props) {\r\n  const { title, line6 } = props;\r\n \r\n  return (\r\n    <div className=\"group-5\">\r\n      <div className=\"flex-col\">\r\n        <div className=\"flex-row\">\r\n          <h1 className=\"title roboto-black-mercury-40px\">{title}</h1>\r\n          <div className=\"rectangle-2\"></div>\r\n        </div>\r\n      </div>\r\n      <img className=\"line-6\" src={line6} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './StopsModal.css';\r\n \r\nfunction StopsModal() {\r\n  return <Group8 {...group8Data} />;\r\n}\r\n \r\nexport default StopsModal;\r\n \r\n \r\nfunction Group8(props) {\r\n  const { overlapGroup, line7, busStop11228, line8, busStop21229, line9, busStop312210, line10 } = props;\r\n \r\n  return (\r\n    <div className=\"group-8\">\r\n        <div className=\"overlap-group rectangleStops\">\r\n      {/* <div className=\"overlap-group\" style={{ backgroundImage: `url(${overlapGroup})` }}> */}\r\n  \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst group8Data = {\r\n    overlapGroup: \"https://anima-uploads.s3.amazonaws.com/projects/60754f9e3840f78fc11beaff/releases/6075a151f28b6b1d17a1feb0/img/rectangle-9@2x.png\",\r\n    line7: \"https://anima-uploads.s3.amazonaws.com/projects/60754f9e3840f78fc11beaff/releases/6075a151f28b6b1d17a1feb0/img/line-7@2x.png\",\r\n    busStop11228: \"Bus stop 1\",\r\n    line8: \"https://anima-uploads.s3.amazonaws.com/projects/60754f9e3840f78fc11beaff/releases/6075a151f28b6b1d17a1feb0/img/line-7@2x.png\",\r\n    busStop21229: \"Bus stop 2\",\r\n    line9: \"https://anima-uploads.s3.amazonaws.com/projects/60754f9e3840f78fc11beaff/releases/6075a151f28b6b1d17a1feb0/img/line-7@2x.png\",\r\n    busStop312210: \"Bus stop 3\",\r\n    line10: \"https://anima-uploads.s3.amazonaws.com/projects/60754f9e3840f78fc11beaff/releases/6075a151f28b6b1d17a1feb0/img/line-10@2x.png\",\r\n};\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\n \r\nexport const SidebarData = [\r\n  {\r\n    title: 'Recordings',\r\n    path: '/music',\r\n    icon: <FaIcons.FaMusic />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Routes',\r\n    path: '/routes',\r\n    icon: <FaIcons.FaRoute />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Contact',\r\n    path: '/about',\r\n    icon: <FaIcons.FaEnvelope />,\r\n    cName: 'nav-text'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\n \r\nfunction SideNavbar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n \r\n  const showSidebar = () => setSidebar(!sidebar);\r\n \r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <div className='navbar'>\r\n          <Link to='#' className='menu-bars'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n        </div>\r\n        <nav className='nav-menu'>\r\n          <ul className='nav-menu-items' onClick={showSidebar}>\r\n            <li className='navbar-toggle'>\r\n              <Link to='#' className='menu-bars'>\r\n                <FaIcons.FaBus />\r\n              </Link>\r\n            </li>\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default SideNavbar;","import React from 'react'\r\n \r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Music","import React from 'react'\r\n \r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default About","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './Mapload.css';\r\nimport * as turf from '@turf/turf';\r\nimport './Modal.css';\r\nimport AnecdoteModal from './AnecdoteModal'\r\nimport StopsModal from './StopsModal';\r\nimport SideNavbar from './menu/SideNavbar';\r\nimport { BusStopData } from './BusStopData';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Music from './pages/Music';\r\nimport About from './pages/About';\r\n \r\nmapboxgl.accessToken = 'pk.eyJ1IjoicHJhbm1hbjExMTAiLCJhIjoiY2trdmg3dDNqMjBidTJ1czFjZnJhdXczbCJ9.iiySDdrwpE0p-hFUAKtU7Q';\r\n\r\nconst Mapload = () => {\r\n    const mapContainerRef = useRef(null);\r\n \r\n    const [lng, setLng] = useState(77.6517347);\r\n    const [lat, setLat] = useState(12.9679711);\r\n    const [zoom, setZoom] = useState(13);\r\n    const [displayMenu, setDisplayMenu] = useState(false);\r\n  \r\n    // Initialize map when component mounts\r\n    useEffect(() => {\r\n      const map = new mapboxgl.Map({\r\n        container: mapContainerRef.current,\r\n        style: 'mapbox://styles/pranman1110/ckljhzuuy0ibx17qo8ulkjx1m',\r\n        center: [lng, lat],\r\n        zoom: zoom\r\n      });\r\n\r\n      // Add navigation control (the +/- zoom buttons)\r\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n  \r\n      map.on('move', () => {\r\n        setLng(map.getCenter().lng.toFixed(4));\r\n        setLat(map.getCenter().lat.toFixed(4));\r\n        setZoom(map.getZoom().toFixed(2));\r\n      });\r\n \r\n        // Calculate the distance in kilometers between route start/end point.\r\n     \r\n        // Number of steps to use in the arc and animation, more steps means\r\n        // a smoother arc and animation, but too many steps will result in a\r\n        // low frame rate\r\n        var steps = 10000;\r\n \r\n        var counter = 0;\r\n\r\n        var point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {\r\n                    'description': 'random point to iterate',\r\n                    'icon': 'bus'\r\n                },\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': [0,0]\r\n                }\r\n            }]\r\n        };\r\n \r\n        map.on('load', function () {\r\n\r\n            map.addSource('point', {\r\n                'type': 'geojson',\r\n                'data': point\r\n            });\r\n            // Add a source and layer displaying a point which will be animated in a circle\r\n\r\n            map.addSource('busstops', {\r\n                'type': 'geojson',\r\n                'data': 'https://pranman11.github.io/bus-data/busstops.geojson'\r\n            });\r\n\r\n            map.addLayer({\r\n                'id': 'busstops',\r\n                'source': 'busstops',\r\n                'type': 'symbol',\r\n                'layout': {\r\n                    'icon-size': 2,\r\n                    'icon-image': 'bus',\r\n                    'icon-rotate': ['get', 'bearing'],\r\n                    'icon-rotation-alignment': 'map',\r\n                    'icon-allow-overlap': true,\r\n                    'icon-ignore-placement': true\r\n                }\r\n            });\r\n\r\n            var popup = new mapboxgl.Popup({\r\n                closeButton: false,\r\n                closeOnClick: false\r\n                })\r\n\r\n            map.on('mouseenter', 'busstops', (e) => {\r\n                    map.getCanvas().style.cursor = 'pointer';\r\n                    console.log(e.features[0].properties);\r\n                    var busNo = e.features[0].properties.busNo;\r\n                    var busStopName = e.features[0].properties.description;\r\n                    var coordinates = e.features[0].geometry.coordinates.slice();\r\n                    // Ensure that if the map is zoomed out such that multiple\r\n                    // copies of the feature are visible, the popup appears\r\n                    // over the copy being pointed to.\r\n                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                    }\r\n                    \r\n                    popup.setLngLat(e.lngLat)\r\n                        .setHTML('<p><strong>'+'Bus: '+ busNo + '<br>Bus Stop: ' + busStopName+'</strong></p><button id=\"startjourney-'+busNo+'\">Start Journey</button>')\r\n                        .addTo(map);\r\n  \r\n                    document.getElementById('startjourney-'+busNo).addEventListener('click', () => {\r\n                        popup.remove();\r\n                        console.log(this);\r\n\r\n                        map.addSource(busNo, {\r\n                            'type': 'geojson',\r\n                            'data': e.features[0].properties.busRouteUrl\r\n                        });\r\n                     \r\n                        map.addLayer({\r\n                            'id': busNo,\r\n                            'type': 'line',\r\n                            'source': busNo,\r\n                            'layout': {\r\n                            'line-join': 'round',\r\n                            'line-cap': 'round'\r\n                            },\r\n                            'paint': {\r\n                            'line-color': '#888',\r\n                            'line-width': 5\r\n                            }\r\n                        });\r\n\r\n                        // var lineDistance = null;\r\n                        // var routeGeoJsonData = map.getSource(busNo);\r\n                        // console.log(routeGeoJsonData);\r\n                        // lineDistance = turf.length(routeGeoJsonData.features[0]);\r\n                        // var arc = [];\r\n\r\n                        // console.log(routeGeoJsonData.features[0].geometry.coordinates[0][0]);\r\n\r\n                        // map.flyTo({center: routeGeoJsonData.features[0].geometry.coordinates[0][0],\r\n                        //     zoom: 16,\r\n                        //     speed: 0.5,\r\n                        // });\r\n                        // // Draw an arc between the `origin` & `destination` of the two points\r\n                        // for (var i = 0; i < lineDistance; i += lineDistance / steps) {\r\n                        //     var segment = turf.along(routeGeoJsonData.features[0], i);\r\n                        //     arc.push(segment.geometry.coordinates);\r\n                        //  }\r\n                        //  routeGeoJsonData.features[0].geometry.coordinates = arc;\r\n\r\n                        // setTimeout(animate(routeGeoJsonData), 2000);\r\n\r\n                        // setDisplayMenu(true);\r\n                    });\r\n                });\r\n            \r\n            // map.on('mouseleave', 'busstops', function () {\r\n            //         map.getCanvas().style.cursor = '';\r\n            //         popup.remove();\r\n            //     });\r\n\r\n            function animate(routeGeoJsonData) {\r\n                    var start =\r\n                    routeGeoJsonData.features[0].geometry.coordinates[\r\n                        counter >= steps ? counter - 1 : counter\r\n                    ];\r\n                    var end =\r\n                    routeGeoJsonData.features[0].geometry.coordinates[\r\n                        counter >= steps ? counter : counter + 1\r\n                    ];\r\n                    if (!start || !end) return;\r\n                    \r\n                    // Update point geometry to a new position based on counter denoting\r\n                    // the index to access the arc\r\n                    point.features[0].geometry.coordinates =\r\n                    routeGeoJsonData.features[0].geometry.coordinates[counter];\r\n                    \r\n                    // Calculate the bearing to ensure the icon is rotated to match the route arc\r\n                    // The bearing is calculated between the current point and the next point, except\r\n                    // at the end of the arc, which uses the previous point and the current point\r\n                    point.features[0].properties.bearing = turf.bearing(\r\n                        turf.point(start),\r\n                        turf.point(end)\r\n                    );\r\n                    \r\n                    // Update the source with this new data\r\n                    map.getSource('point').setData(point);\r\n                    map.panTo(start, {duration: 100});\r\n                    \r\n                    // Request the next frame of animation as long as the end has not been reached\r\n                    if (counter < steps) {\r\n                        requestAnimationFrame(animate(routeGeoJsonData));\r\n                    }\r\n                    \r\n                    counter = counter + 1;\r\n                }\r\n\r\n                function startJourney() {\r\n                    // var busNo = this.id.substring(this.id.indexOf('-')+1);\r\n                }\r\n        });\r\n      // Clean up on unmount\r\n      return () => map.remove();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  \r\n    return (\r\n      <div>\r\n        <Router>\r\n            <SideNavbar />\r\n            <Switch>\r\n                <Route path='/about' component={About} />\r\n                <Route path='/music' component={Music} />\r\n            </Switch>\r\n        </Router>\r\n        <div className={`anecdote-modal ${displayMenu ? 'Show' : ''}`}>\r\n            <AnecdoteModal />\r\n        </div>\r\n        <div className={`stops-modal ${displayMenu ? 'Show' : ''}`}>\r\n            <StopsModal />\r\n        </div>\r\n        <div className='map-container' ref={mapContainerRef} />\r\n      </div>\r\n    );\r\n};\r\n \r\nexport default Mapload;\r\n","import './App.css';\r\nimport Mapload from './Mapload';\r\n \r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Mapload />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n \r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}